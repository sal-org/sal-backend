// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/client": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Profile"
                ],
                "summary": "Get client profile with email, if signed up already",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email of client - to get details, if signed up already",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Profile"
                ],
                "summary": "Update client profile details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client ID to update details",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClientProfileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Profile"
                ],
                "summary": "Add client profile after OTP verified to signup",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClientProfileAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/appointment": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Appointment"
                ],
                "summary": "Get client appointment details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment ID to get details",
                        "name": "appointment_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Appointment"
                ],
                "summary": "Reschedule an appointment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Appointment ID to be rescheduled",
                        "name": "appointment_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AppointmentRescheduleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Appointment"
                ],
                "summary": "Book an appointment",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.AppointmentBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/appointment/past": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Appointment"
                ],
                "summary": "Get client past appointments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logged in client ID",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/appointment/slots": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Appointment"
                ],
                "summary": "Get client appointment slots",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logged in client ID",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/appointment/upcoming": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Appointment"
                ],
                "summary": "Get client upcoming appointments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logged in client ID",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/counsellor": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Counsellor"
                ],
                "summary": "Get counsellor details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Counsellor ID to get details",
                        "name": "counsellor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/counsellor/order": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Counsellor"
                ],
                "summary": "Create appointment order with client and counsellor",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CounsellorOrderCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/counsellor/paymentcomplete": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Counsellor"
                ],
                "summary": "Call after payment is completed for counsellor order",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CounsellorOrderPaymentCompleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/counsellor/slots": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Counsellor"
                ],
                "summary": "Get counsellor slots",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Counsellor ID to get slot details",
                        "name": "counsellor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/event": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Event"
                ],
                "summary": "Get event details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID to get details",
                        "name": "event_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/event/booked": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Event"
                ],
                "summary": "Get booked upcoming and past events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logged in client ID",
                        "name": "client_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/event/order": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Event"
                ],
                "summary": "Book a slot in an event",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClientEventOrderCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/event/paymentcomplete": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Event"
                ],
                "summary": "Call after payment is completed for event order",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ClientEventOrderPaymentCompleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/events": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Event"
                ],
                "summary": "List available events",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/listener": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Listener"
                ],
                "summary": "Get listener details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Listener ID to get details",
                        "name": "listener_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/listener/order": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Listener"
                ],
                "summary": "Create appointment order with client and listener",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ListenerOrderCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/listener/paymentcomplete": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Listener"
                ],
                "summary": "Call after payment is completed for listener order",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ListenerOrderPaymentCompleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/listener/slots": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Listener"
                ],
                "summary": "Get listener slots",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Listener ID to get slot details",
                        "name": "listener_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/search": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Search"
                ],
                "summary": "Get counsellor/listener list with search filters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Counsellor(1)/Listener(2) or dont send if both",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "anxiety/anger/stress/depression/relationship/parenting/grief/motivation/life/others - send selected topic id",
                        "name": "topic",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "english/hindi/tamil/telugu/kannada/bengali/malayalam/marathi/gujarati/punjabi - send selected language id",
                        "name": "language",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Available on date (2020-02-27)",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Available on time (0-23 slots), in IST, for the selected date",
                        "name": "time",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Price range - 100,200 (min,max)",
                        "name": "price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort price by - 1(asc), 2(desc)",
                        "name": "price_sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort rating by - 1(asc), 2(desc)",
                        "name": "rating_sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/sendotp": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Login"
                ],
                "summary": "Send OTP to specified phone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number to send OTP - send phone number with 91 code",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/verifyotp": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Login"
                ],
                "summary": "Verify OTP sent to specified phone",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Phone number OTP has been sent to - send phone number with 91 code",
                        "name": "phone",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OTP entered by client",
                        "name": "otp",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/counsellor": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Counsellor Profile"
                ],
                "summary": "Update counsellor profile details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Counsellor ID to update details",
                        "name": "counsellor_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CounsellorProfileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Counsellor Profile"
                ],
                "summary": "Add counsellor profile after OTP verified to signup",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CounsellorProfileAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/counsellor/appointment/past": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Counsellor Appointment"
                ],
                "summary": "Get counsellor past appointments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logged in counsellor ID",
                        "name": "counsellor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/counsellor/appointment/upcoming": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Counsellor Appointment"
                ],
                "summary": "Get counsellor upcoming appointments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logged in counsellor ID",
                        "name": "counsellor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/counsellor/availability": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Counsellor Availability"
                ],
                "summary": "Get counsellor availability hours",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Counsellor ID to get availability details",
                        "name": "counsellor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Counsellor Availability"
                ],
                "summary": "Update counsellor availability hours",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Counsellor ID to update availability details",
                        "name": "counsellor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/counsellor/event/order": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Counsellor Event"
                ],
                "summary": "Book a slot in an event",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CounsellorEventOrderCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/counsellor/event/paymentcomplete": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Counsellor Event"
                ],
                "summary": "Call after payment is completed for event order",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CounsellorEventOrderPaymentCompleteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/counsellor/events": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Counsellor Event"
                ],
                "summary": "Get upcoming and past counsellor events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logged in counsellor ID",
                        "name": "counsellor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/language": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Miscellaneous"
                ],
                "summary": "Get all available language",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/listener": {
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener Profile"
                ],
                "summary": "Update listener profile details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Listener ID to update details",
                        "name": "listener_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ListenerProfileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener Profile"
                ],
                "summary": "Add listener profile after OTP verified to signup",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ListenerProfileAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/listener/appointment/past": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener Appointment"
                ],
                "summary": "Get listener past appointments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logged in listener ID",
                        "name": "listener_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/listener/appointment/upcoming": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener Appointment"
                ],
                "summary": "Get listener upcoming appointments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Logged in listener ID",
                        "name": "listener_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/listener/availability": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener Availability"
                ],
                "summary": "Get listener availability hours",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Listener ID to get availability details",
                        "name": "listener_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Listener Availability"
                ],
                "summary": "Update listener availability hours",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Listener ID to update availability details",
                        "name": "listener_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/meta": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Miscellaneous"
                ],
                "summary": "Get all available topics, languages",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/topic": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Miscellaneous"
                ],
                "summary": "Get all available topics",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Miscellaneous"
                ],
                "summary": "Upload files like photos, certificates, aadhar etc",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to be uploaded",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "1(counsellor)/2(listener)/3(client)",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AppointmentBookRequest": {
            "type": "object",
            "properties": {
                "appointment_slot_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "model.AppointmentRescheduleRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "model.ClientEventOrderCreateRequest": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "coupon_code": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "event_id": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "model.ClientEventOrderPaymentCompleteRequest": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                }
            }
        },
        "model.ClientProfileAddRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "model.ClientProfileUpdateRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "model.CounsellorEventOrderCreateRequest": {
            "type": "object",
            "properties": {
                "counsellor_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "topic_id": {
                    "type": "string"
                }
            }
        },
        "model.CounsellorEventOrderPaymentCompleteRequest": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                }
            }
        },
        "model.CounsellorOrderCreateRequest": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "counsellor_id": {
                    "type": "string"
                },
                "coupon_code": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "no_session": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "model.CounsellorOrderPaymentCompleteRequest": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "payment_id": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "string"
                }
            }
        },
        "model.CounsellorProfileAddRequest": {
            "type": "object",
            "properties": {
                "aadhar": {
                    "type": "string"
                },
                "about": {
                    "type": "string"
                },
                "certificate": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "experience": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "language_ids": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "linkedin": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "price_3": {
                    "type": "string"
                },
                "price_5": {
                    "type": "string"
                },
                "resume": {
                    "type": "string"
                },
                "topic_ids": {
                    "type": "string"
                }
            }
        },
        "model.CounsellorProfileUpdateRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        },
        "model.ListenerOrderCreateRequest": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "listener_id": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "model.ListenerOrderPaymentCompleteRequest": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                }
            }
        },
        "model.ListenerProfileAddRequest": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "experience": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "language_ids": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "occupation": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "topic_ids": {
                    "type": "string"
                }
            }
        },
        "model.ListenerProfileUpdateRequest": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "hwmpf9h476.execute-api.ap-south-1.amazonaws.com",
	BasePath:    "/prod",
	Schemes:     []string{"https"},
	Title:       "SAL Backend API",
	Description: "This is a api for SAL client/listener/counsellor APIs",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
