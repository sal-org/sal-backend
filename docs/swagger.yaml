basePath: /prod
definitions:
  model.AppointmentBookRequest:
    properties:
      appointment_slot_id:
        type: string
      date:
        type: string
      time:
        type: string
    type: object
  model.AppointmentRatingAdd:
    properties:
      appointment_id:
        type: string
      client_id:
        type: string
      counsellor_id:
        type: string
      rating:
        type: string
      rating_comment:
        type: string
      rating_types:
        type: string
    type: object
  model.AppointmentRescheduleRequest:
    properties:
      date:
        type: string
      time:
        type: string
    type: object
  model.AssessmentAddRequest:
    properties:
      age:
        type: string
      assessment_id:
        type: string
      details:
        items:
          properties:
            assessment_question_id:
              type: string
            assessment_question_option_id:
              type: string
            score:
              type: string
          type: object
        type: array
      feedback:
        type: string
      gender:
        type: string
      name:
        type: string
      phone:
        type: string
      user_id:
        type: string
    type: object
  model.CancellationUpdateRequest:
    properties:
      cancellation_reason:
        type: string
    type: object
  model.ClientProfileAddRequest:
    properties:
      date_of_birth:
        type: string
      device_id:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      location:
        type: string
      phone:
        type: string
      photo:
        type: string
      timezone:
        type: string
      topic_ids:
        type: string
    type: object
  model.ClientProfileUpdateRequest:
    properties:
      date_of_birth:
        type: string
      device_id:
        type: string
      first_name:
        type: string
      gender:
        type: string
      last_name:
        type: string
      location:
        type: string
      photo:
        type: string
      timezone:
        type: string
      topic_ids:
        type: string
    type: object
  model.CounsellorCommentRequest:
    properties:
      attachments:
        type: string
      commentforclient:
        type: string
    type: object
  model.CounsellorOrderCreateRequest:
    properties:
      client_id:
        type: string
      counsellor_id:
        type: string
      coupon_code:
        type: string
      date:
        type: string
      no_session:
        type: string
      time:
        type: string
    type: object
  model.CounsellorOrderPaymentCompleteRequest:
    properties:
      order_id:
        type: string
      payment_id:
        type: string
      payment_method:
        type: string
    type: object
  model.CounsellorProfileAddRequest:
    properties:
      aadhar:
        type: string
      about:
        type: string
      bank_account_no:
        type: string
      bank_account_type:
        type: string
      bank_name:
        type: string
      branch_name:
        type: string
      certificate:
        type: string
      device_id:
        type: string
      education:
        type: string
      email:
        type: string
      experience:
        type: string
      first_name:
        type: string
      gender:
        type: string
      ifsc:
        type: string
      language_ids:
        type: string
      last_name:
        type: string
      linkedin:
        type: string
      multiple_sessions:
        type: string
      pan:
        type: string
      payee_name:
        type: string
      payout_percentage:
        type: string
      phone:
        type: string
      photo:
        type: string
      price:
        type: string
      price_3:
        type: string
      price_5:
        type: string
      resume:
        type: string
      timezone:
        type: string
      topic_ids:
        type: string
    type: object
  model.CounsellorProfileUpdateRequest:
    properties:
      aadhar:
        type: string
      about:
        type: string
      bank_account_no:
        type: string
      bank_account_type:
        type: string
      bank_name:
        type: string
      branch_name:
        type: string
      certificate:
        type: string
      device_id:
        type: string
      education:
        type: string
      experience:
        type: string
      first_name:
        type: string
      gender:
        type: string
      ifsc:
        type: string
      language_ids:
        type: string
      last_name:
        type: string
      linkedin:
        type: string
      multiple_sessions:
        type: string
      pan:
        type: string
      payee_name:
        type: string
      payout_percentage:
        type: string
      photo:
        type: string
      price:
        type: string
      price_3:
        type: string
      price_5:
        type: string
      resume:
        type: string
      timezone:
        type: string
      topic_ids:
        type: string
    type: object
  model.EventBlockOrderCreateRequest:
    properties:
      counsellor_id:
        type: string
      date:
        type: string
      description:
        type: string
      photo:
        type: string
      price:
        type: string
      time:
        type: string
      title:
        type: string
      topic_id:
        type: string
    type: object
  model.EventOrderCreateRequest:
    properties:
      coupon_code:
        type: string
      event_order_id:
        type: string
      user_id:
        type: string
    type: object
  model.EventOrderPaymentCompleteRequest:
    properties:
      order_id:
        type: string
      payment_id:
        type: string
      payment_method:
        type: string
    type: object
  model.ListenerOrderCreateRequest:
    properties:
      client_id:
        type: string
      date:
        type: string
      listener_id:
        type: string
      time:
        type: string
    type: object
  model.ListenerOrderPaymentCompleteRequest:
    properties:
      order_id:
        type: string
    type: object
  model.ListenerProfileAddRequest:
    properties:
      aadhar:
        type: string
      about:
        type: string
      age_group:
        type: string
      device_id:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      language_ids:
        type: string
      last_name:
        type: string
      occupation:
        type: string
      phone:
        type: string
      photo:
        type: string
      timezone:
        type: string
      topic_ids:
        type: string
    type: object
  model.ListenerProfileUpdateRequest:
    properties:
      aadhar:
        type: string
      about:
        type: string
      age_group:
        type: string
      device_id:
        type: string
      first_name:
        type: string
      gender:
        type: string
      language_ids:
        type: string
      last_name:
        type: string
      occupation:
        type: string
      photo:
        type: string
      timezone:
        type: string
      topic_ids:
        type: string
    type: object
  model.MoodAddRequest:
    properties:
      age:
        type: string
      client_id:
        type: string
      date:
        type: string
      gender:
        type: string
      mood_id:
        type: string
      name:
        type: string
      notes:
        type: string
      phone:
        type: string
    type: object
  model.NotificationAllowSettingModel:
    properties:
      status:
        type: string
      userType:
        type: string
    type: object
  model.TherapistOrderCreateRequest:
    properties:
      client_id:
        type: string
      coupon_code:
        type: string
      date:
        type: string
      no_session:
        type: string
      therapist_id:
        type: string
      time:
        type: string
    type: object
  model.TherapistOrderPaymentCompleteRequest:
    properties:
      order_id:
        type: string
      payment_id:
        type: string
      payment_method:
        type: string
    type: object
  model.TherapistProfileAddRequest:
    properties:
      aadhar:
        type: string
      about:
        type: string
      bank_account_no:
        type: string
      bank_account_type:
        type: string
      bank_name:
        type: string
      branch_name:
        type: string
      certificate:
        type: string
      device_id:
        type: string
      education:
        type: string
      email:
        type: string
      experience:
        type: string
      first_name:
        type: string
      gender:
        type: string
      ifsc:
        type: string
      language_ids:
        type: string
      last_name:
        type: string
      linkedin:
        type: string
      multiple_sessions:
        type: string
      pan:
        type: string
      payee_name:
        type: string
      payout_percentage:
        type: string
      phone:
        type: string
      photo:
        type: string
      price:
        type: string
      price_3:
        type: string
      price_5:
        type: string
      resume:
        type: string
      timezone:
        type: string
      topic_ids:
        type: string
    type: object
  model.TherapistProfileUpdateRequest:
    properties:
      aadhar:
        type: string
      about:
        type: string
      bank_account_no:
        type: string
      bank_account_type:
        type: string
      bank_name:
        type: string
      branch_name:
        type: string
      certificate:
        type: string
      device_id:
        type: string
      education:
        type: string
      experience:
        type: string
      first_name:
        type: string
      gender:
        type: string
      ifsc:
        type: string
      language_ids:
        type: string
      last_name:
        type: string
      linkedin:
        type: string
      multiple_sessions:
        type: string
      pan:
        type: string
      payee_name:
        type: string
      payout_percentage:
        type: string
      photo:
        type: string
      price:
        type: string
      price_3:
        type: string
      price_5:
        type: string
      resume:
        type: string
      timezone:
        type: string
      topic_ids:
        type: string
    type: object
host: yvsdncrpod.execute-api.ap-south-1.amazonaws.com
info:
  contact: {}
  description: This is a api for SAL client/listener/counsellor APIs
  title: SAL Backend API
  version: "1.0"
paths:
  /client:
    get:
      parameters:
      - description: Email of client - to get details, if signed up already
        in: query
        name: email
        required: true
        type: string
      - description: Device ID of client - to get details, if signed up already
        in: query
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Get client profile with email, if signed up already
      tags:
      - Client Profile
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ClientProfileAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Add client profile after OTP verified to signup
      tags:
      - Client Profile
    put:
      parameters:
      - description: Client ID to update details
        in: query
        name: client_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ClientProfileUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Update client profile details
      tags:
      - Client Profile
  /client/appointment:
    delete:
      parameters:
      - description: Appointment ID to be cancelled
        in: query
        name: appointment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Cancel an appointment
      tags:
      - Client Appointment
    get:
      parameters:
      - description: Appointment ID to get details
        in: query
        name: appointment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get client appointment details
      tags:
      - Client Appointment
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AppointmentBookRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Book an appointment
      tags:
      - Client Appointment
    put:
      parameters:
      - description: Appointment ID to be rescheduled
        in: query
        name: appointment_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AppointmentRescheduleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Reschedule an appointment
      tags:
      - Client Appointment
  /client/appointment/agoratoken:
    get:
      parameters:
      - description: Appointment ID or Order ID is equal to Channel Name
        in: query
        name: appointment_id
        required: true
        type: string
      - description: Individual(1), Cafe(2)
        in: query
        name: session
        required: true
        type: string
      - description: Publisher(1), Subscriber(2)
        in: query
        name: type
        required: true
        type: string
      - description: Counsellor(1) , Client(2)
        in: query
        name: user_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get Agora Token
      tags:
      - Client Appointment
  /client/appointment/bulk:
    delete:
      parameters:
      - description: Appointment slot ID to be cancelled
        in: query
        name: appointment_slot_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Cancel bulk appointments
      tags:
      - Client Appointment
  /client/appointment/cancellationreason:
    put:
      parameters:
      - description: Appointment ID, Appointment Slot ID to Cancellation Reason
        in: query
        name: appointment_id
        required: true
        type: string
      - description: Single Sessions(2), Multiple Sessions(3)
        in: query
        name: sessions
        required: true
        type: string
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CancellationUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Cancellation Region client
      tags:
      - Client Appointment
  /client/appointment/download:
    get:
      parameters:
      - description: Logged in invoice ID
        in: query
        name: invoice_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get invoice download Receipt
      tags:
      - Client Appointment
  /client/appointment/end:
    put:
      parameters:
      - description: Appointment ID to be ended
        in: query
        name: appointment_id
        required: true
        type: string
      - description: User ID to be started
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: End an appointment
      tags:
      - Client Appointment
  /client/appointment/past:
    get:
      parameters:
      - description: Logged in client ID
        in: query
        name: client_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get client past appointments
      tags:
      - Client Appointment
  /client/appointment/rate:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AppointmentRatingAdd'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Rate the appointment
      tags:
      - Client Appointment
  /client/appointment/slots:
    get:
      parameters:
      - description: Logged in client ID
        in: query
        name: client_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get client appointment slots
      tags:
      - Client Appointment
  /client/appointment/start:
    put:
      parameters:
      - description: Appointment ID to be started
        in: query
        name: appointment_id
        required: true
        type: string
      - description: User ID to be started
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Start an appointment
      tags:
      - Client Appointment
  /client/appointment/upcoming:
    get:
      parameters:
      - description: Logged in client ID
        in: query
        name: client_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get client upcoming appointments
      tags:
      - Client Appointment
  /client/assessment:
    get:
      parameters:
      - description: Assessment ID to get details
        in: query
        name: assessment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment detail
      tags:
      - Client Assessment
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AssessmentAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Add client assessment
      tags:
      - Client Assessment
  /client/assessment/download:
    get:
      parameters:
      - description: Logged in Assessment Result ID
        in: query
        name: assessment_result_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment download
      tags:
      - Client Assessment
  /client/assessment/history:
    get:
      parameters:
      - description: Logged in client ID
        in: query
        name: client_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment history
      tags:
      - Client Assessment
  /client/assessments:
    get:
      parameters:
      - description: Logged in client ID
        in: query
        name: client_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: List available assessments
      tags:
      - Client Assessment
  /client/counsellor:
    get:
      parameters:
      - description: Counsellor ID to get details
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get counsellor details
      tags:
      - Client Counsellor
  /client/counsellor/order:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CounsellorOrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Create appointment order with client and counsellor
      tags:
      - Client Counsellor
  /client/counsellor/paymentcomplete:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CounsellorOrderPaymentCompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Call after payment is completed for counsellor order
      tags:
      - Client Counsellor
  /client/counsellor/slots:
    get:
      parameters:
      - description: Counsellor ID to get slot details
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get counsellor slots
      tags:
      - Client Counsellor
  /client/event:
    get:
      parameters:
      - description: Event order ID to get details
        in: query
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get event details
      tags:
      - Client Event
  /client/event/booked:
    get:
      parameters:
      - description: Logged in client ID
        in: query
        name: client_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get booked upcoming and past events
      tags:
      - Client Event
  /client/event/order:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventOrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Book a slot in an event
      tags:
      - Client Event
  /client/event/paymentcomplete:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventOrderPaymentCompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Call after payment is completed for event order
      tags:
      - Client Event
  /client/events:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: List available events
      tags:
      - Client Event
  /client/home:
    get:
      parameters:
      - description: Logged in client ID
        in: query
        name: client_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get home page content
      tags:
      - Client Home
  /client/listener:
    get:
      parameters:
      - description: Listener ID to get details
        in: query
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get listener details
      tags:
      - Client Listener
  /client/listener/order:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ListenerOrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Create appointment order with client and listener
      tags:
      - Client Listener
  /client/listener/paymentcomplete:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ListenerOrderPaymentCompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Call after payment is completed for listener order
      tags:
      - Client Listener
  /client/listener/slots:
    get:
      parameters:
      - description: Listener ID to get slot details
        in: query
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get listener slots
      tags:
      - Client Listener
  /client/mood:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.MoodAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Add client mood
      tags:
      - Client Mood
  /client/mood/content:
    get:
      parameters:
      - description: Logged in user ID to get mood liked content
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get mood content
      tags:
      - Client Mood
  /client/mood/history:
    get:
      parameters:
      - description: Logged in client ID to get mood history
        in: query
        name: client_id
        required: true
        type: string
      - description: Dates to get history - (start,end) - (2021-05-21,2021-06-10)
        in: query
        name: dates
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get mood history
      tags:
      - Client Mood
  /client/notification:
    get:
      parameters:
      - description: Logged in client ID
        in: query
        name: client_id
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get notifications for client
      tags:
      - Client Notifications
  /client/refresh-token:
    get:
      parameters:
      - description: Logged in client ID
        in: query
        name: client_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get new access token with refresh token
      tags:
      - Client Login
  /client/search:
    get:
      parameters:
      - description: Counsellor(1)/Listener(2)/Therapist(4) or dont send if all
        in: query
        name: type
        type: string
      - description: anxiety/anger/stress/depression/relationship/parenting/grief/motivation/life/others
          - send selected topic id
        in: query
        name: topic
        type: string
      - description: english/hindi/tamil/telugu/kannada/bengali/malayalam/marathi/gujarati/punjabi
          - send selected language id
        in: query
        name: language
        type: string
      - description: Available on date (2020-02-27)
        in: query
        name: date
        type: string
      - description: Price range - 100,200 (min,max)
        in: query
        name: price
        type: string
      - description: Experience range - 0,30 (min,max)
        in: query
        name: experience
        type: string
      - description: Sort by - 1(price), 2(rating), 3(age_group)
        in: query
        name: sort_by
        type: string
      - description: Order by - 1(asc), 2(desc) - should be sent along with sort_by
        in: query
        name: order_by
        type: string
      - description: Page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get counsellor/listener/therapist list with search filters
      tags:
      - Client Search
  /client/sendotp:
    get:
      parameters:
      - description: Phone number to send OTP - send phone number with 91 code
        in: query
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Send OTP to specified phone
      tags:
      - Client Login
  /client/therapist:
    get:
      parameters:
      - description: Therapist ID to get details
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get therapist details
      tags:
      - Client Therapist
  /client/therapist/order:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.TherapistOrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Create appointment order with client and therapist
      tags:
      - Client Therapist
  /client/therapist/paymentcomplete:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.TherapistOrderPaymentCompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Call after payment is completed for therapist order
      tags:
      - Client Therapist
  /client/therapist/slots:
    get:
      parameters:
      - description: Therapist ID to get slot details
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get therapist slots
      tags:
      - Client Therapist
  /client/verifyotp:
    get:
      parameters:
      - description: Phone number OTP has been sent to - send phone number with 91
          code
        in: query
        name: phone
        required: true
        type: string
      - description: OTP entered by client
        in: query
        name: otp
        required: true
        type: string
      - description: Device ID entered by client
        in: query
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Verify OTP sent to specified phone
      tags:
      - Client Login
  /content:
    get:
      parameters:
      - description: Logged in user ID (client_id/counsellor_id/listener_id/therapist_id)
        in: query
        name: user_id
        type: string
      - description: Content category ID - false if required all
        in: query
        name: category_id
        type: string
      - description: Content mood ID - false if required all
        in: query
        name: mood_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get contents
      tags:
      - Content
  /content-category:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get all available content categories
      tags:
      - Miscellaneous
  /content/like:
    delete:
      parameters:
      - description: Logged in user ID (client_id/counsellor_id/listener_id/therapist_id)
        in: query
        name: user_id
        required: true
        type: string
      - description: Content ID to be unliked
        in: query
        name: content_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Unlike content
      tags:
      - Content
    get:
      parameters:
      - description: Logged in user ID (client_id/counsellor_id/listener_id/therapist_id)
        in: query
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get liked contents
      tags:
      - Content
    post:
      parameters:
      - description: Logged in user ID (client_id/counsellor_id/listener_id/therapist_id)
        in: query
        name: user_id
        required: true
        type: string
      - description: Content ID to be liked
        in: query
        name: content_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Like content
      tags:
      - Content
  /counsellor:
    get:
      parameters:
      - description: Email of counsellor - to get details, if signed up already
        in: query
        name: email
        type: string
      - description: Counsellor ID to update details
        in: query
        name: counsellor_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get counsellor profile with email, if signed up already
      tags:
      - Counsellor Profile
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CounsellorProfileAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Add counsellor profile after OTP verified to signup
      tags:
      - Counsellor Profile
    put:
      parameters:
      - description: Counsellor ID to update details
        in: query
        name: counsellor_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CounsellorProfileUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Update counsellor profile details
      tags:
      - Counsellor Profile
  /counsellor-content:
    get:
      parameters:
      - description: Logged in therapists ID (counsellor_id/therapist_id)
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get contents
      tags:
      - Miscellaneous
  /counsellor/appointment:
    delete:
      parameters:
      - description: Appointment ID to be cancelled
        in: query
        name: appointment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Cancel an appointment
      tags:
      - Counsellor Appointment
  /counsellor/appointment/comment:
    put:
      parameters:
      - description: Appointment ID to be ended
        in: query
        name: appointment_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.CounsellorCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Comment an appointment
      tags:
      - Counsellor Appointment
  /counsellor/appointment/end:
    put:
      parameters:
      - description: Appointment ID to be ended
        in: query
        name: appointment_id
        required: true
        type: string
      - description: User ID to be started
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: End an appointment
      tags:
      - Counsellor Appointment
  /counsellor/appointment/past:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get counsellor past appointments
      tags:
      - Counsellor Appointment
  /counsellor/appointment/start:
    put:
      parameters:
      - description: Appointment ID to be started
        in: query
        name: appointment_id
        required: true
        type: string
      - description: User ID to be started
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Start an appointment
      tags:
      - Counsellor Appointment
  /counsellor/appointment/upcoming:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get counsellor upcoming appointments
      tags:
      - Counsellor Appointment
  /counsellor/assessment:
    get:
      parameters:
      - description: Assessment ID to get details
        in: query
        name: assessment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment detail
      tags:
      - Counsellor Assessment
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AssessmentAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Add counsellor assessment
      tags:
      - Counsellor Assessment
  /counsellor/assessment/download:
    get:
      parameters:
      - description: Logged in Assessment Result ID
        in: query
        name: assessment_result_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment download
      tags:
      - Counsellor Assessment
  /counsellor/assessment/history:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: GET counsellor assessment
      tags:
      - Counsellor Assessment
  /counsellor/assessments:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: List available assessments
      tags:
      - Counsellor Assessment
  /counsellor/availability:
    get:
      parameters:
      - description: Counsellor ID to get availability details
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get counsellor availability hours
      tags:
      - Counsellor Availability
    put:
      parameters:
      - description: Counsellor ID to update availability details
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Update counsellor availability hours
      tags:
      - Counsellor Availability
  /counsellor/event:
    get:
      parameters:
      - description: Event order ID to get details
        in: query
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get event details
      tags:
      - Counsellor Event
    put:
      parameters:
      - description: Event order ID to update
        in: query
        name: order_id
        required: true
        type: string
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      - description: Start(2), Stop(3)
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Start and stop event
      tags:
      - Counsellor Event
  /counsellor/event/block:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get blocked upcoming and past events
      tags:
      - Counsellor Event
  /counsellor/event/block/order:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventBlockOrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Block a slot for an event
      tags:
      - Counsellor Event
  /counsellor/event/booked:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get booked upcoming and past events
      tags:
      - Counsellor Event
  /counsellor/event/order:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventOrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Book a slot in an event
      tags:
      - Counsellor Event
  /counsellor/event/paymentcomplete:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventOrderPaymentCompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Call after payment is completed for event order
      tags:
      - Counsellor Event
  /counsellor/events:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: List available events
      tags:
      - Counsellor Event
  /counsellor/home:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get home page content
      tags:
      - Counsellor Home
  /counsellor/notification:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get notifications for counsellor
      tags:
      - Counsellor Notifications
  /counsellor/payment:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      - description: Order by - 1(asc), 2(desc) - should be sent along with sort_by
        in: query
        name: order_by
        type: string
      - description: Page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get payments for counsellor
      tags:
      - Counsellor Payments
  /counsellor/refresh-token:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get new access token with refresh token
      tags:
      - Counsellor Login
  /counsellor/training:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get counsellor training content
      tags:
      - Counsellor Training
  /language:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get all available language
      tags:
      - Miscellaneous
  /listener:
    get:
      parameters:
      - description: Email of listener - to get details, if signed up already
        in: query
        name: email
        type: string
      - description: Listener ID to update details
        in: query
        name: listener_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get listener profile with email, if signed up already
      tags:
      - Listener Profile
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ListenerProfileAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Add listener profile after OTP verified to signup
      tags:
      - Listener Profile
    put:
      parameters:
      - description: Listener ID to update details
        in: query
        name: listener_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.ListenerProfileUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Update listener profile details
      tags:
      - Listener Profile
  /listener/appointment:
    delete:
      parameters:
      - description: Appointment ID to be cancelled
        in: query
        name: appointment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Cancel an appointment
      tags:
      - Listener Appointment
  /listener/appointment/end:
    put:
      parameters:
      - description: Appointment ID to be ended
        in: query
        name: appointment_id
        required: true
        type: string
      - description: User ID to be started
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: End an appointment
      tags:
      - Listener Appointment
  /listener/appointment/past:
    get:
      parameters:
      - description: Logged in listener ID
        in: query
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get listener past appointments
      tags:
      - Listener Appointment
  /listener/appointment/start:
    put:
      parameters:
      - description: Appointment ID to be started
        in: query
        name: appointment_id
        required: true
        type: string
      - description: User ID to be started
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Start an appointment
      tags:
      - Listener Appointment
  /listener/appointment/upcoming:
    get:
      parameters:
      - description: Logged in listener ID
        in: query
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get listener upcoming appointments
      tags:
      - Listener Appointment
  /listener/assessment:
    get:
      parameters:
      - description: Assessment ID to get details
        in: query
        name: assessment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment detail
      tags:
      - Listener Assessment
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AssessmentAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Add listener assessment
      tags:
      - Listener Assessment
  /listener/assessment/download:
    get:
      parameters:
      - description: Logged in Assessment Result ID
        in: query
        name: assessment_result_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment download
      tags:
      - Listener Assessment
  /listener/assessment/history:
    get:
      parameters:
      - description: Logged in listener ID
        in: query
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment history
      tags:
      - Listener Assessment
  /listener/assessments:
    get:
      parameters:
      - description: Logged in counsellor ID
        in: query
        name: counsellor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: List available assessments
      tags:
      - Listener Assessment
  /listener/availability:
    get:
      parameters:
      - description: Listener ID to get availability details
        in: query
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get listener availability hours
      tags:
      - Listener Availability
    put:
      parameters:
      - description: Listener ID to update availability details
        in: query
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Update listener availability hours
      tags:
      - Listener Availability
  /listener/event:
    get:
      parameters:
      - description: Event order ID to get details
        in: query
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get event details
      tags:
      - Listener Event
  /listener/event/booked:
    get:
      parameters:
      - description: Logged in listener ID
        in: query
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get booked upcoming and past events
      tags:
      - Listener Event
  /listener/event/order:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventOrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Book a slot in an event
      tags:
      - Listener Event
  /listener/event/paymentcomplete:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventOrderPaymentCompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Call after payment is completed for event order
      tags:
      - Listener Event
  /listener/events:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: List available events
      tags:
      - Listener Event
  /listener/home:
    get:
      parameters:
      - description: Logged in listener ID
        in: query
        name: listener_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get home page content
      tags:
      - Listener Home
  /listener/notification:
    get:
      parameters:
      - description: Logged in listener ID
        in: query
        name: listener_id
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get notifications for listener
      tags:
      - Listener Notifications
  /listener/refresh-token:
    get:
      parameters:
      - description: Logged in listener ID
        in: query
        name: listener_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get new access token with refresh token
      tags:
      - Listener Login
  /listener/training:
    get:
      parameters:
      - description: Logged in listener ID
        in: query
        name: listener_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get listener training content
      tags:
      - Listener Training
  /meta:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get all available topics, languages
      tags:
      - Miscellaneous
  /mood:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get all moods
      tags:
      - Miscellaneous
  /notification-status:
    put:
      parameters:
      - description: ClientID/TherapistID/CounsellorID/ListernerID
        in: query
        name: user_id
        required: true
        type: string
      - description: User type (counsellor:1/listener:2/client:3/therapists:4)
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.NotificationAllowSettingModel'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Update Notification status
      tags:
      - Miscellaneous
  /rating-type:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get ratings types
      tags:
      - Miscellaneous
  /sendotp:
    get:
      parameters:
      - description: Phone number to send OTP - send phone number with 91 code
        in: query
        name: phone
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Send OTP to specified phone
      tags:
      - Counsellor/Listener/Therapist Login
  /therapist:
    get:
      parameters:
      - description: Email of therapist - to get details, if signed up already
        in: query
        name: email
        type: string
      - description: Therapist ID to update details
        in: query
        name: therapist_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get therapist profile with email, if signed up already
      tags:
      - Therapist Profile
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.TherapistProfileAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Add therapist profile after OTP verified to signup
      tags:
      - Therapist Profile
    put:
      parameters:
      - description: Therapist ID to update details
        in: query
        name: therapist_id
        required: true
        type: string
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.TherapistProfileUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Update therapist profile details
      tags:
      - Therapist Profile
  /therapist/appointment:
    delete:
      parameters:
      - description: Appointment ID to be cancelled
        in: query
        name: appointment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Cancel an appointment
      tags:
      - Therapist Appointment
  /therapist/appointment/end:
    put:
      parameters:
      - description: Appointment ID to be ended
        in: query
        name: appointment_id
        required: true
        type: string
      - description: User ID to be started
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: End an appointment
      tags:
      - Therapist Appointment
  /therapist/appointment/past:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get therapist past appointments
      tags:
      - Therapist Appointment
  /therapist/appointment/start:
    put:
      parameters:
      - description: Appointment ID to be started
        in: query
        name: appointment_id
        required: true
        type: string
      - description: User ID to be started
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Start an appointment
      tags:
      - Therapist Appointment
  /therapist/appointment/upcoming:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get therapist upcoming appointments
      tags:
      - Therapist Appointment
  /therapist/assessment:
    get:
      parameters:
      - description: Assessment ID to get details
        in: query
        name: assessment_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment detail
      tags:
      - Therapist Assessment
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.AssessmentAddRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Add therapist assessment
      tags:
      - Therapist Assessment
  /therapist/assessment/download:
    get:
      parameters:
      - description: Logged in Assessment Result ID
        in: query
        name: assessment_result_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment download
      tags:
      - Therapist Assessment
  /therapist/assessment/history:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get assessment history
      tags:
      - Therapist Assessment
  /therapist/assessments:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: List available assessments
      tags:
      - Therapist Assessment
  /therapist/availability:
    get:
      parameters:
      - description: Therapist ID to get availability details
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get therapist availability hours
      tags:
      - Therapist Availability
    put:
      parameters:
      - description: Therapist ID to update availability details
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Update therapist availability hours
      tags:
      - Therapist Availability
  /therapist/event:
    get:
      parameters:
      - description: Event order ID to get details
        in: query
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get event details
      tags:
      - Therapist Event
    put:
      parameters:
      - description: Event order ID to update
        in: query
        name: order_id
        required: true
        type: string
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      - description: Start(2), Stop(3)
        in: query
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Start and stop event
      tags:
      - Therapist Event
  /therapist/event/block:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get blocked upcoming and past events
      tags:
      - Therapist Event
  /therapist/event/block/order:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventBlockOrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Block a slot for an event
      tags:
      - Therapist Event
  /therapist/event/booked:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get booked upcoming and past events
      tags:
      - Therapist Event
  /therapist/event/order:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventOrderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Book a slot in an event
      tags:
      - Therapist Event
  /therapist/event/paymentcomplete:
    post:
      parameters:
      - description: Request Body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/model.EventOrderPaymentCompleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Call after payment is completed for event order
      tags:
      - Therapist Event
  /therapist/events:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: List available events
      tags:
      - Therapist Event
  /therapist/home:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get home page content
      tags:
      - Therapist Home
  /therapist/notification:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get notifications for therapist
      tags:
      - Therapist Notifications
  /therapist/payment:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      - description: Order by - 1(asc), 2(desc) - should be sent along with sort_by
        in: query
        name: order_by
        type: string
      - description: Page number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get payments for counsellor
      tags:
      - Therapist Payments
  /therapist/refresh-token:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get new access token with refresh token
      tags:
      - Therapist Login
  /therapist/training:
    get:
      parameters:
      - description: Logged in therapist ID
        in: query
        name: therapist_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get therapist training content
      tags:
      - Therapist Training
  /topic:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Get all available topics
      tags:
      - Miscellaneous
  /upload:
    post:
      consumes:
      - multipart/form-data
      parameters:
      - description: File to be uploaded
        in: formData
        name: file
        required: true
        type: file
      - description: 1(counsellor)/2(listener)/3(client)/4(therapist)
        in: formData
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      security:
      - JWTAuth: []
      summary: Upload files like photos, certificates, aadhar etc
      tags:
      - Miscellaneous
  /verifyotp:
    get:
      parameters:
      - description: Phone number OTP has been sent to - send phone number with 91
          code
        in: query
        name: phone
        required: true
        type: string
      - description: OTP entered by counsellor/listener/therapist
        in: query
        name: otp
        required: true
        type: string
      - description: Device ID entered by counsellor/listener/therapist
        in: query
        name: device_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Verify OTP sent to specified phone
      tags:
      - Counsellor/Listener/Therapist Login
schemes:
- https
securityDefinitions:
  JWTAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
